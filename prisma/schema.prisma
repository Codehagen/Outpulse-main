// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String      @id @default(cuid())
  clerkId    String      @unique // Link to Clerk user ID
  email      String      @unique
  name       String?
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  workspaces Workspace[] @relation("WorkspaceUsers")
}

model Workspace {
  id            String       @id @default(cuid())
  name          String
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
  users         User[]       @relation("WorkspaceUsers")
  agents        Agent[]
  leads         Lead[]
  tools         Tool[]
  calls         Call[] // Relation to calls within this workspace
  phoneNumber   PhoneNumber? @relation("WorkspacePhoneNumber", fields: [phoneNumberId], references: [id])
  phoneNumberId String?      @unique // Link to the single phone number for this workspace
}

model Agent {
  id           String    @id @default(cuid())
  name         String
  elevenLabsId String    @unique
  workspace    Workspace @relation(fields: [workspaceId], references: [id])
  workspaceId  String
  config       Json?
  // Agents don't directly own numbers now, the workspace does
  // phoneNumbers  PhoneNumber[] 
  tools        Tool[]    @relation("AgentTools")
  createdAt    DateTime  @default(now())
  updatedAt    DateTime  @updatedAt
  calls        Call[] // Relation to calls made by this agent
}

model Lead {
  id          String    @id @default(cuid())
  workspace   Workspace @relation(fields: [workspaceId], references: [id])
  workspaceId String
  name        String
  phoneNumber String
  status      String? // e.g., "new", "called", "failed", etc.
  notes       String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  calls       Call[] // Relation to calls made to this lead
}

model PhoneNumber {
  id                      String     @id @default(cuid())
  number                  String     @unique
  label                   String?
  elevenLabsPhoneNumberId String?    @unique // ID from ElevenLabs for this number
  // Remove direct agent link for now, associate with workspace
  // agent                   Agent?    @relation(fields: [agentId], references: [id])
  // agentId                 String?
  workspace               Workspace? @relation("WorkspacePhoneNumber") // Relation back to Workspace
  assignedAt              DateTime? // When was it assigned to the workspace?
  createdAt               DateTime   @default(now())
  updatedAt               DateTime   @updatedAt
  calls                   Call[] // Relation to calls made with this number
}

model Tool {
  id               String    @id @default(cuid())
  name             String
  description      String
  config           Json
  workspace        Workspace @relation(fields: [workspaceId], references: [id])
  workspaceId      String
  elevenLabsToolId String?
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  agents           Agent[]   @relation("AgentTools")
}

model Call {
  id            String      @id @default(cuid())
  workspace     Workspace   @relation(fields: [workspaceId], references: [id])
  workspaceId   String
  agent         Agent       @relation(fields: [agentId], references: [id])
  agentId       String
  lead          Lead        @relation(fields: [leadId], references: [id])
  leadId        String
  // Call uses the workspace phone number
  phoneNumber   PhoneNumber @relation(fields: [phoneNumberId], references: [id])
  phoneNumberId String
  callSid       String? // From Twilio/ElevenLabs
  status        String // e.g., "initiating", "ringing", "answered", "completed", "failed", "busy", "no-answer"
  startedAt     DateTime    @default(now())
  endedAt       DateTime?
  duration      Int? // In seconds
  notes         String?
  recordingUrl  String? // If available
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
}
