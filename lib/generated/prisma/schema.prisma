// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "windows"]
  output        = "../lib/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id         String      @id @default(cuid())
  clerkId    String      @unique // Link to Clerk user ID
  email      String      @unique
  name       String?
  createdAt  DateTime    @default(now())
  updatedAt  DateTime    @updatedAt
  workspaces Workspace[] @relation("WorkspaceUsers")
}

model Workspace {
  id        String   @id @default(cuid())
  name      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  users     User[]   @relation("WorkspaceUsers")
  agents    Agent[]
  leads     Lead[]
  tools     Tool[]
}

model Agent {
  id           String        @id @default(cuid())
  name         String
  elevenLabsId String        @unique
  workspace    Workspace     @relation(fields: [workspaceId], references: [id])
  workspaceId  String
  config       Json?
  phoneNumbers PhoneNumber[]
  tools        Tool[]        @relation("AgentTools")
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
}

model Lead {
  id          String    @id @default(cuid())
  workspace   Workspace @relation(fields: [workspaceId], references: [id])
  workspaceId String
  name        String
  phoneNumber String
  status      String? // e.g., "new", "called", "failed", etc.
  notes       String?
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}

model PhoneNumber {
  id         String    @id @default(cuid())
  number     String    @unique
  label      String?
  agent      Agent?    @relation(fields: [agentId], references: [id])
  agentId    String?
  assignedAt DateTime?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt
}

model Tool {
  id               String    @id @default(cuid())
  name             String
  description      String
  config           Json
  workspace        Workspace @relation(fields: [workspaceId], references: [id])
  workspaceId      String
  elevenLabsToolId String?
  createdAt        DateTime  @default(now())
  updatedAt        DateTime  @updatedAt
  agents           Agent[]   @relation("AgentTools")
}
